name: Update sqlc_version

on:
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch:

jobs:
  update-sqlc-version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get latest sqlc version
        id: get_version
        run: |
          latest=$(curl -s https://api.github.com/repos/sqlc-dev/sqlc/releases/latest | jq -r .tag_name | sed 's/^v//')
          echo "latest=$latest" >> $GITHUB_OUTPUT

      - name: Update sqlc_version in code
        run: |
          old=$(awk -F'"' '/const sqlc_version/ {print $2}' src/parrot/internal/sqlc.gleam)
          new="${{ steps.get_version.outputs.latest }}"
          if [ "$old" != "$new" ]; then
            sed -i "s/const sqlc_version = \".*\"/const sqlc_version = \"$new\"/" src/parrot/internal/sqlc.gleam
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            git checkout -b update-sqlc-version-$new
            git add src/parrot/internal/sqlc.gleam
            git commit -m "chore: update sqlc_version to $new"
            git push origin update-sqlc-version-$new
          fi

      - name: Create Pull Request
        if: ${{ steps.get_version.outputs.latest != '' }}
        uses: peter-evans/create-pull-request@v6
        with:
          commit-message: "chore: update sqlc_version to ${{ steps.get_version.outputs.latest }}"
          branch: update-sqlc-version-${{ steps.get_version.outputs.latest }}
          title: "chore: update sqlc_version to ${{ steps.get_version.outputs.latest }}"
          body: "Automated update of sqlc_version to ${{ steps.get_version.outputs.latest }}"
